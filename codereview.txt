
Opis:

- Stworzenie klas Price i Description do obsługi metod implementujących daną logikę biznesową. Zostaną one pobrane z klasy Product. Dla klasy Price, changePriceTo() oraz odpowiednio
 dla klasy Description, metody replaceCharFromDesc() i formatDesc(). Klasa Product będzie służyć jako agregat. Wykorzystanie tego sposóbu pozwala na rozdzielenie odpowiedzialności.

 - usunięcie Nullable types przy argumentach w metodach. Jak widać we wnętrzach metod, nie dopuszczamy aby pola miały wartości null. Usunięcie takich typów spowoduje,
 ograniczenie sprawdzania w metodach czy dany typ jest nullem, a co za tym idzie, zmniejszy się skomplikowanie warunków w ich wnętrzach. W metodzie replaceChar nowo utworzonej klasy Description,
 nie jest konieczne usuwanie Nullable types, ponieważ str_replace dopuszcza w pierwszym argumencie Nulla, ale żeby zachować większą kontrole nad kodem,
 lepiej aby metoda przyjmowała jeden typ

 - usunięcie powtórzeń kodu. Zostały stworzone metody do sprawdzania czy cena jest prawidłowa, oraz czy prawidłowy jest przelicznik

 Description:

- Create Price and Description classes to handle the methods that implement the given business logic. These will be taken from the Product class. For the Price class, changePriceTo() and respectively
 for the Description class, the replaceCharFromDesc() and formatDesc() methods. The Product class will serve as an aggregate. Using this method allows separation of responsibilities.

 - Removing Nullable types next to arguments in methods. As you can see inside the methods, we do not allow fields to have null values. Removing such types will
 reduce the checking in methods whether the type is null, and thus reduce the complexity of the conditions inside them. In the replaceChar method of the newly created class Description,
 it is not necessary to remove Nullable types, because str_replace allows Null in the first argument, but to keep more control over the code,
 it is better for the method to take one type

 - removing code repetitions. Methods have been created to check if the price is correct (is not Invalid price), and if the counter is correct (is not negative counter)